{"version":3,"file":null,"sources":["../src/util.js","../src/connect.js","../src/subscription.js","../src/calculation.js","../src/changeTrigger.js","../src/asyncChangeTrigger.js"],"sourcesContent":["export const error = (location, msg) => {\n  throw new Error(`*** Error in ${location}: ${msg}`)\n}","import React from 'react';\nimport { error as _err } from './util';\n\nexport function connect(component, subsAndCalcs, changeTriggers){\n    const displayName = component.displayName || component.name || 'SlimReduxReact',\n          error       = msg => _err(`<${displayName}/>`, msg);\n\n    class SlimReduxConnector extends React.Component {\n        constructor(props, context){\n            super(props);\n\n            // Check for store instance\n            if(!context.store)\n                error(`No store found in context. Did you forget to wrap your code in the <Provider> component?`);\n\n            const store = context.store;\n\n            // Setup initial state\n            const initialState = {};\n\n            // Go through subscriptions and calculations and set them up to feed into the state\n            Object.keys(subsAndCalcs).map(key => {\n                const stateKey = key;\n\n                // Create a closure so that the stateKey is still available after this setup code has executed\n                (function(){\n                    // Hook it up to the state\n                    const getInitialValue = subsAndCalcs[key](value => {\n                        this.setState({...this.state, [stateKey]: value});\n                    }, store);\n\n                    // Get initial state\n                    initialState[key] = getInitialValue();\n                })()\n            });\n\n            this.wrappedChangeTriggers = {};\n\n            // Go through change triggers and wrap them to use the current store instance\n            Object.keys(changeTriggers).map(key => {\n                wrappedChangeTriggers[key] = function(...params){\n                    // Creating a new closure to preserve the store instance\n                    const ct = changeTriggers[key];\n\n                    // We only pass down the parameters to the change trigger if the change trigger accepts any\n                    if(ct.length === 1)\n                        ct(store);\n                    else\n                        ct(...params, store);\n                    }\n            });\n        }\n\n        componentDidMount() {}\n\n        render() {\n            return <WrappedComponent {...this.props} {...this.wrappedChangeTriggers} {...this.state}/>\n        }\n    }\n\n    SlimReduxConnector.displayName = `SlimReduxConnector${displayName}`;\n\n    SlimReduxConnector.contextTypes = {\n        store: React.PropTypes.object\n    }\n\n    return SlimReduxConnector;\n}","import { subscription as slimReduxSubscription } from 'slim-redux';\n\nexport function subscription(subscription) {\n    const createSubscription = (changeCallback, storeArg) => slimReduxSubscription(subscription, changeCallback, storeArg);\n    return createSubscription;\n}","import { calculation as slimReduxCalculation } from 'slim-redux';\n\nexport function calculation(subscriptions, calcFunction) {\n    const createCalculation = (changeCallback, storeArg) => slimReduxCalculation(subscriptions, calcFunction, changeCallback, storeArg);\n    return createCalculation;\n}","import { changeTrigger as slimReduxChangeTrigger } from 'slim-redux';\n\nexport function changeTrigger(actionType, reducer, focusSubString) {\n    const createChangeTrigger = (actionType, reducer, focusSubString) => slimReduxChangeTrigger(actionType, reducer, focusSubString);\n    return createChangeTrigger;\n}","import { asyncChangeTrigger as slimReduxAsyncChangeTrigger } from 'slim-redux';\n\nexport function asyncChangeTrigger(actionType, reducer, focusSubString) {\n    const createAsyncChangeTrigger = (actionType, reducer, focusSubString) => slimReduxChangeTrigger(actionType, reducer, focusSubString);\n    return createAsyncChangeTrigger;\n}"],"names":["error","location","msg","Error","connect","component","subsAndCalcs","changeTriggers","displayName","name","_err","SlimReduxConnector","props","context","store","initialState","map","stateKey","key","getInitialValue","setState","state","value","wrappedChangeTriggers","ct","params","length","React","Component","contextTypes","PropTypes","object","subscription","createSubscription","changeCallback","storeArg","slimReduxSubscription","calculation","subscriptions","calcFunction","createCalculation","slimReduxCalculation","changeTrigger","actionType","reducer","focusSubString","createChangeTrigger","slimReduxChangeTrigger","asyncChangeTrigger","createAsyncChangeTrigger"],"mappings":";;;;;;;;;;;;;;;;;;AAAO,IAAMA,QAAQ,SAARA,KAAQ,CAACC,QAAD,EAAWC,GAAX,EAAmB;QAChC,IAAIC,KAAJ,mBAA0BF,QAA1B,UAAuCC,GAAvC,CAAN;CADK;;ACGA,SAASE,OAAT,CAAiBC,SAAjB,EAA4BC,YAA5B,EAA0CC,cAA1C,EAAyD;QACtDC,cAAcH,UAAUG,WAAV,IAAyBH,UAAUI,IAAnC,IAA2C,gBAA/D;QACMT,WAAc,SAAdA,QAAc;eAAOU,YAASF,WAAT,SAA0BN,GAA1B,CAAP;KADpB;;QAGMS,kBAJsD;;;oCAK5CC,KAAZ,EAAmBC,OAAnB,EAA2B;;;;iJACjBD,KADiB;;gBAIpB,CAACC,QAAQC,KAAZ,EACId;;gBAEEc,QAAQD,QAAQC,KAAtB;;;gBAGMC,eAAe,EAArB;;;yBAGYT,YAAZ,EAA0BU,GAA1B,CAA8B,eAAO;oBAC3BC,WAAWC,GAAjB;;;iBAGC,YAAU;;;;wBAEDC,kBAAkBb,aAAaY,GAAb,EAAkB,iBAAS;+BAC1CE,QAAL,cAAkB,OAAKC,KAAvB,sBAA+BJ,QAA/B,EAA0CK,KAA1C;qBADoB,EAErBR,KAFqB,CAAxB;;;iCAKaI,GAAb,IAAoBC,iBAApB;iBAPJ;aAJJ;;kBAeKI,qBAAL,GAA6B,EAA7B;;;yBAGYhB,cAAZ,EAA4BS,GAA5B,CAAgC,eAAO;sCACbE,GAAtB,IAA6B,YAAmB;;wBAEtCM,KAAKjB,eAAeW,GAAf,CAAX;;;;sDAFqCO,MAAO;8BAAA;;;wBAKzCD,GAAGE,MAAH,KAAc,CAAjB,EACIF,GAAGV,KAAH,EADJ,KAGIU,oBAAMC,MAAN,SAAcX,KAAd;iBARR;aADJ;;;;;;gDAcgB;;;qCAEX;uBACE,oBAAC,gBAAD,eAAsB,KAAKF,KAA3B,EAAsC,KAAKW,qBAA3C,EAAsE,KAAKF,KAA3E,EAAP;;;;;MAjDyBM,MAAMC,SAJqB;;uBAyDzCpB,WAAnB,0BAAsDA,WAAtD;;uBAEmBqB,YAAnB,GAAkC;eACvBF,MAAMG,SAAN,CAAgBC;KAD3B;;WAIOpB,kBAAP;;;AChEG,SAASqB,cAAT,CAAsBA,eAAtB,EAAoC;QACjCC,qBAAqB,SAArBA,kBAAqB,CAACC,cAAD,EAAiBC,QAAjB;eAA8BC,uBAAsBJ,eAAtB,EAAoCE,cAApC,EAAoDC,QAApD,CAA9B;KAA3B;WACOF,kBAAP;;;ACFG,SAASI,aAAT,CAAqBC,aAArB,EAAoCC,YAApC,EAAkD;QAC/CC,oBAAoB,SAApBA,iBAAoB,CAACN,cAAD,EAAiBC,QAAjB;eAA8BM,sBAAqBH,aAArB,EAAoCC,YAApC,EAAkDL,cAAlD,EAAkEC,QAAlE,CAA9B;KAA1B;WACOK,iBAAP;;;ACFG,SAASE,eAAT,CAAuBC,UAAvB,EAAmCC,OAAnC,EAA4CC,cAA5C,EAA4D;QACzDC,sBAAsB,SAAtBA,mBAAsB,CAACH,UAAD,EAAaC,OAAb,EAAsBC,cAAtB;eAAyCE,wBAAuBJ,UAAvB,EAAmCC,OAAnC,EAA4CC,cAA5C,CAAzC;KAA5B;WACOC,mBAAP;;;ACFG,SAASE,kBAAT,CAA4BL,UAA5B,EAAwCC,OAAxC,EAAiDC,cAAjD,EAAiE;QAC9DI,2BAA2B,SAA3BA,wBAA2B,CAACN,UAAD,EAAaC,OAAb,EAAsBC,cAAtB;eAAyCE,uBAAuBJ,UAAvB,EAAmCC,OAAnC,EAA4CC,cAA5C,CAAzC;KAAjC;WACOI,wBAAP;;;;;;;;"}