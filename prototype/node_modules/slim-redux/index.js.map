{"version":3,"file":null,"sources":["../src/change.js","../src/slimRedux.js","../src/slimReduxReducer.js"],"sourcesContent":["import { registerReducer, dispatchStoreAction, dispatchErrorAction } from './slimRedux';\n\nconst performPayloadValidation = (actionType, payload, payloadValidation) => {\n  const accept = () => ({type: 'accept'});\n  const reject = (msg = '') => ({type: 'reject', payload: msg});\n\n  const validation = payloadValidation(payload, accept, reject);\n\n  if(validation.type === 'reject')\n    dispatchErrorAction(actionType, validation.payload);\n\n  return validation.type;\n}\n\nexport function change(parameters){\n  var actionType        = parameters.actionType || null,\n      reducer           = parameters.reducer,\n      payloadValidation = parameters.payloadValidation || null;\n\n  if(actionType){\n    // This change has an ACTION_TYPE, which means we can register it in the reducer\n    registerReducer(actionType, reducer, payloadValidation);\n\n    // Create and return change trigger function (has payload as the only parameter, will trigger validation)\n    return (actionPayload) => {\n      var validation = 'accept';\n\n      if(payloadValidation)\n        validation = performPayloadValidation(actionType, actionPayload, payloadValidation);\n\n      if(validation === 'accept'){\n        dispatchStoreAction({\n          type: actionType,\n          payload: actionPayload,\n        });\n      }\n    }\n  } else {\n    // Anonymous change (no ACTION_TYPE) - don't register, just dispatch the appropriate action!\n    return (actionPayload) => {\n      var validation = 'accept';\n\n      if(payloadValidation)\n        validation = performPayloadValidation(actionType, actionPayload, payloadValidation);\n\n      if(validation === 'accept'){\n        dispatchStoreAction({\n          type: '__ANONYMOUS_CHANGE__',\n          payload: {\n            reducer: reducer,\n            payload: actionPayload,\n          }\n        });\n      }\n    }\n  }\n}\n","import { change } from './change';\n\nvar storeDispatch = null;\nvar reducers = {}\n\nexport function registerStoreDispatch(dispatch) {\n  storeDispatch = dispatch;\n}\n\nexport function initSlimRedux(store) {\n  store['change'] = change;\n  registerStoreDispatch(store.dispatch);\n}\n\nexport function dispatchStoreAction(action) {\n  storeDispatch(action);\n}\n\nexport function dispatchErrorAction(actionType, payload) {\n  storeDispatch({\n    type: actionType,\n    error: true,\n    payload: payload,\n  })\n\n  console.error(`***Error action triggered: \\n ${JSON.stringify({\n    type: actionType,\n    error: true,\n    payload: payload,\n  }, null, 2)}`);\n}\n\nexport function getReducer(actionType) {\n  if(actionType in reducers)\n    return reducers[actionType].reducer;\n  else\n    return null;\n}\n\nexport function registerReducer(actionType, reducer, inputValidation) {\n  const newReducer = {\n    reducer,\n    inputValidation,\n  }\n\n  reducers[actionType] = newReducer;\n}\n","import { getReducer } from './slimRedux';\n\nexport function createSlimReduxReducer(initialState) {\n  return function slimReduxReducer(state = initialState, action) {\n    if(action.type === '__ANONYMOUS_CHANGE__'){\n      // Action was created by slim-redux and is an \"anonymous\" change - a change to the store without a named action\n      // Action contains everything that the reducer needs to make the changes to the store\n      const payload = action.payload.payload,\n            reducer = action.payload.reducer;\n\n      return reducer(state, payload, '__ANONYMOUS_CHANGE__');\n    } else {\n      // Action was triggered by a named change or dispatched by regular redux code\n      const reducer = getReducer(action.type);\n\n      if(reducer){\n        return reducer(state, action.payload, action);\n      }else{\n        return state;\n      }\n    }\n  }\n}\n"],"names":["performPayloadValidation","actionType","payload","payloadValidation","accept","type","reject","msg","validation","dispatchErrorAction","change","parameters","reducer","actionPayload","storeDispatch","reducers","registerStoreDispatch","dispatch","initSlimRedux","store","dispatchStoreAction","action","error","getReducer","registerReducer","inputValidation","newReducer","createSlimReduxReducer","initialState","slimReduxReducer","state"],"mappings":"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"}